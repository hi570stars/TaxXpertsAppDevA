{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from 'expo-constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar image = require(\"../assets/library.jpg\");\nvar LinksPage = function LinksPage(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: image,\n      style: styles.image,\n      children: [_jsxs(View, {\n        style: styles.nav,\n        children: [_jsx(Button, {\n          title: \"Survey\",\n          color: \"black\",\n          onPress: function onPress() {\n            return navigation.navigate('Survey');\n          }\n        }), _jsx(Button, {\n          title: \"Information\",\n          color: \"black\",\n          onPress: function onPress() {\n            return navigation.navigate('Information');\n          }\n        }), _jsx(Button, {\n          title: \"Tax Fraud\",\n          color: \"black\",\n          onPress: function onPress() {\n            return navigation.navigate('TaxFraud');\n          }\n        }), _jsx(Button, {\n          title: \"About Us\",\n          color: \"black\",\n          onPress: function onPress() {\n            return navigation.navigate('AboutUs');\n          }\n        })]\n      }), _jsx(View, {\n        style: styles.header,\n        children: _jsx(Text, {\n          style: styles.headerText,\n          children: \"Find basic information on taxes before. \"\n        })\n      }), _jsx(Text, {\n        style: styles.text,\n        children: \"  \"\n      }), _jsxs(_Fragment, {\n        children: [_jsx(Info, {\n          name: \"1\"\n        }), _jsx(Info, {\n          name: \"2\"\n        }), _jsx(Info, {\n          name: \"3\"\n        }), _jsx(Info, {\n          name: \"4\"\n        }), _jsx(Info, {\n          name: \"5\"\n        }), _jsx(Info, {\n          name: \"6\"\n        }), _jsx(Info, {\n          name: \"7\"\n        }), _jsx(Info, {\n          name: \"8\"\n        }), _jsx(Info, {\n          name: \"9\"\n        })]\n      })]\n    })\n  });\n};\nvar Info = function Info(props) {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    toScreen = _useState2[0],\n    setToScreen = _useState2[1];\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"---\"\n    }), _jsx(Button, {\n      style: styles.button,\n      onPress: function onPress() {\n        setToScreen(false);\n      },\n      disabled: !toScreen,\n      title: toScreen ? props.name : 'Modals are a great tool for improving user interfaces. Essentially, a modal is a screen that appears above another screen, directing a user’s attention towards critical information or guiding them to the next step in a process. An active modal disables the original screen, which is still visible, prompting the user to interact with the new one. In this tutorial, we’ll look at some practical use cases for modals and improve our understanding of them by creating the following in React Native:'\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  nav: {\n    flex: 0.2,\n    justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-start'\n  },\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  header: {\n    paddingTop: 10\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white'\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingTop: 20\n  },\n  text: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  button: {\n    width: \"40%\",\n    height: \"25%\",\n    backgroundColor: \"lightcoral\",\n    alignContent: 'center',\n    padding: 20,\n    marginBottom: 10\n  }\n});\nexport default LinksPage;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ImageBackground","Button","Constants","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","image","require","LinksPage","_ref","navigation","style","styles","container","children","source","nav","title","color","onPress","navigate","header","headerText","text","Info","name","props","_useState","_useState2","_slicedToArray","toScreen","setToScreen","button","disabled","create","flex","justifyContent","flexDirection","alignItems","resizeMode","paddingTop","fontSize","fontWeight","textAlign","textContainer","width","height","backgroundColor","alignContent","padding","marginBottom"],"sources":["C:/Users/shriya/Desktop/Code_2023/TAX_App_2023/taxxpertsappdeva/screens/LinksPage.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Text, StyleSheet, ImageBackground, Button} from 'react-native';\r\nimport Constants from 'expo-constants';\r\n\r\nconst image = require('../assets/library.jpg');\r\n\r\nconst LinksPage = ({ navigation }) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={image} style={styles.image}>\r\n        <View style={styles.nav}>\r\n          <Button\r\n            title=\"Survey\"\r\n            color=\"black\"\r\n            onPress={() => navigation.navigate('Survey')}\r\n          />\r\n          <Button\r\n            title=\"Information\"\r\n            color=\"black\"\r\n            onPress={() => navigation.navigate('Information')}\r\n          />\r\n          <Button\r\n            title=\"Tax Fraud\"\r\n            color=\"black\"\r\n            onPress={() => navigation.navigate('TaxFraud')}\r\n          />\r\n          <Button\r\n            title=\"About Us\"\r\n            color=\"black\"\r\n            onPress={() => navigation.navigate('AboutUs')}\r\n          />\r\n        </View>\r\n        <View style={styles.header}>\r\n          <Text style={styles.headerText}>Find basic information on taxes before. </Text>\r\n        </View>\r\n        <Text style={styles.text}>  </Text>\r\n        <>\r\n          <Info name=\"1\" />\r\n          <Info name=\"2\" />\r\n          <Info name=\"3\" />\r\n          <Info name=\"4\" />\r\n          <Info name=\"5\" />\r\n          <Info name=\"6\" />\r\n          <Info name=\"7\" />\r\n          <Info name=\"8\" />\r\n          <Info name=\"9\" />\r\n        </>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Info = props => {\r\n  const [toScreen, setToScreen] = useState(true);\r\n  return (\r\n  <View>\r\n    <Text style={styles.text}>\r\n      ---\r\n    </Text>\r\n    <Button style={styles.button}\r\n        onPress={()=> {\r\n          setToScreen(false);\r\n        }}\r\n        disabled = {!toScreen}\r\n        title = {toScreen ? props.name: 'Modals are a great tool for improving user interfaces. Essentially, a modal is a screen that appears above another screen, directing a user’s attention towards critical information or guiding them to the next step in a process. An active modal disables the original screen, which is still visible, prompting the user to interact with the new one. In this tutorial, we’ll look at some practical use cases for modals and improve our understanding of them by creating the following in React Native:'}\r\n    />\r\n  </View>\r\n );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  nav: {\r\n    flex: 0.2,\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    resizeMode: 'cover',\r\n    justifyContent: 'center',\r\n  },\r\n  header: {\r\n    paddingTop: 10,\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: 'white',\r\n  },\r\n  textContainer: {\r\n    flex: 1,\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    paddingTop: 20,\r\n  },\r\n  text: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n  button: {\r\n    width: \"40%\",\r\n    height: \"25%\",\r\n    backgroundColor: \"lightcoral\",\r\n    alignContent: 'center',\r\n    padding: 20,\r\n    marginBottom: 10,\r\n  }\r\n});\r\n\r\nexport default LinksPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,MAAA;AAEtC,OAAOC,SAAS,MAAM,gBAAgB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,IAAMC,KAAK,GAAGC,OAAO,wBAAwB,CAAC;AAE9C,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC7B,OACET,IAAA,CAACP,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BX,KAAA,CAACN,eAAe;MAACkB,MAAM,EAAET,KAAM;MAACK,KAAK,EAAEC,MAAM,CAACN,KAAM;MAAAQ,QAAA,GAClDX,KAAA,CAACT,IAAI;QAACiB,KAAK,EAAEC,MAAM,CAACI,GAAI;QAAAF,QAAA,GACtBb,IAAA,CAACH,MAAM;UACLmB,KAAK,EAAC,QAAQ;UACdC,KAAK,EAAC,OAAO;UACbC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMT,UAAU,CAACU,QAAQ,CAAC,QAAQ,CAAC;UAAA;QAAC,CAC9C,CAAC,EACFnB,IAAA,CAACH,MAAM;UACLmB,KAAK,EAAC,aAAa;UACnBC,KAAK,EAAC,OAAO;UACbC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMT,UAAU,CAACU,QAAQ,CAAC,aAAa,CAAC;UAAA;QAAC,CACnD,CAAC,EACFnB,IAAA,CAACH,MAAM;UACLmB,KAAK,EAAC,WAAW;UACjBC,KAAK,EAAC,OAAO;UACbC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMT,UAAU,CAACU,QAAQ,CAAC,UAAU,CAAC;UAAA;QAAC,CAChD,CAAC,EACFnB,IAAA,CAACH,MAAM;UACLmB,KAAK,EAAC,UAAU;UAChBC,KAAK,EAAC,OAAO;UACbC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMT,UAAU,CAACU,QAAQ,CAAC,SAAS,CAAC;UAAA;QAAC,CAC/C,CAAC;MAAA,CACE,CAAC,EACPnB,IAAA,CAACP,IAAI;QAACiB,KAAK,EAAEC,MAAM,CAACS,MAAO;QAAAP,QAAA,EACzBb,IAAA,CAACN,IAAI;UAACgB,KAAK,EAAEC,MAAM,CAACU,UAAW;UAAAR,QAAA,EAAC;QAAwC,CAAM;MAAC,CAC3E,CAAC,EACPb,IAAA,CAACN,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACW,IAAK;QAAAT,QAAA,EAAC;MAAE,CAAM,CAAC,EACnCX,KAAA,CAAAE,SAAA;QAAAS,QAAA,GACEb,IAAA,CAACuB,IAAI;UAACC,IAAI,EAAC;QAAG,CAAE,CAAC,EACjBxB,IAAA,CAACuB,IAAI;UAACC,IAAI,EAAC;QAAG,CAAE,CAAC,EACjBxB,IAAA,CAACuB,IAAI;UAACC,IAAI,EAAC;QAAG,CAAE,CAAC,EACjBxB,IAAA,CAACuB,IAAI;UAACC,IAAI,EAAC;QAAG,CAAE,CAAC,EACjBxB,IAAA,CAACuB,IAAI;UAACC,IAAI,EAAC;QAAG,CAAE,CAAC,EACjBxB,IAAA,CAACuB,IAAI;UAACC,IAAI,EAAC;QAAG,CAAE,CAAC,EACjBxB,IAAA,CAACuB,IAAI;UAACC,IAAI,EAAC;QAAG,CAAE,CAAC,EACjBxB,IAAA,CAACuB,IAAI;UAACC,IAAI,EAAC;QAAG,CAAE,CAAC,EACjBxB,IAAA,CAACuB,IAAI;UAACC,IAAI,EAAC;QAAG,CAAE,CAAC;MAAA,CACjB,CAAC;IAAA,CACY;EAAC,CACd,CAAC;AAEX,CAAC;AAED,IAAMD,IAAI,GAAG,SAAPA,IAAIA,CAAGE,KAAK,EAAI;EACpB,IAAAC,SAAA,GAAgClC,QAAQ,CAAC,IAAI,CAAC;IAAAmC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,OACAzB,KAAA,CAACT,IAAI;IAAAoB,QAAA,GACHb,IAAA,CAACN,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACW,IAAK;MAAAT,QAAA,EAAC;IAE1B,CAAM,CAAC,EACPb,IAAA,CAACH,MAAM;MAACa,KAAK,EAAEC,MAAM,CAACoB,MAAO;MACzBb,OAAO,EAAE,SAAAA,QAAA,EAAK;QACZY,WAAW,CAAC,KAAK,CAAC;MACpB,CAAE;MACFE,QAAQ,EAAI,CAACH,QAAS;MACtBb,KAAK,EAAIa,QAAQ,GAAGJ,KAAK,CAACD,IAAI,GAAE;IAAkf,CACrhB,CAAC;EAAA,CACE,CAAC;AAET,CAAC;AAED,IAAMb,MAAM,GAAGhB,UAAU,CAACsC,MAAM,CAAC;EAC/BlB,GAAG,EAAE;IACHmB,IAAI,EAAE,GAAG;IACTC,cAAc,EAAE,QAAQ;IACxBC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EACDzB,SAAS,EAAE;IACTsB,IAAI,EAAE,CAAC;IACPE,aAAa,EAAE,QAAQ;IACvBD,cAAc,EAAE;EAClB,CAAC;EACD9B,KAAK,EAAE;IACL6B,IAAI,EAAE,CAAC;IACPI,UAAU,EAAE,OAAO;IACnBH,cAAc,EAAE;EAClB,CAAC;EACDf,MAAM,EAAE;IACNmB,UAAU,EAAE;EACd,CAAC;EACDlB,UAAU,EAAE;IACVmB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBzB,KAAK,EAAE;EACT,CAAC;EACD0B,aAAa,EAAE;IACbT,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,YAAY;IAC5BE,UAAU,EAAE,QAAQ;IACpBE,UAAU,EAAE;EACd,CAAC;EACDjB,IAAI,EAAE;IACJL,KAAK,EAAE,OAAO;IACduB,QAAQ,EAAE,EAAE;IACZE,SAAS,EAAE;EACb,CAAC;EACDX,MAAM,EAAE;IACNa,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,KAAK;IACbC,eAAe,EAAE,YAAY;IAC7BC,YAAY,EAAE,QAAQ;IACtBC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAe1C,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}